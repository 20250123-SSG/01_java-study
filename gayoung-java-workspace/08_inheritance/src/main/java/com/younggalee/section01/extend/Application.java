package com.younggalee.section01.extend;

public class Application {
    public static void main(String[] args){
        /*
            ## 상속 ##
            1. inheritance
            2. 부모(상위), 자식(하위) 간의 구조로 클래스를 구성하는 개념
            3. 상위 클래스가 가지고 있는 멤버를 하위 클래스에서 새로 작성할 필요 없이
               마치 내것처럼 사용가능
            4. 단순히 물려받는 개념보다 조금 더 나아가면 부모 클래스를 확장(extend)한다는 개념을 가짐
            >> 부모 것을 내것처럼 사용하는 뿐 아니라 추가적으로 본인만의 멤버도 작성가능

            ## 상속의 장점 ##
            1. 새로운 클래스 작성시 기존에 작성된 클래스를 재사용할 수 있음
              - 재사용시 새롭게 작성하는 것보다 빠르게 작성가능 (생산성 향상)
              - 공통 코드가 부모 클래스에 존재하므로 수정사항 발생시 부모 클래스 수정만으로 전체적으로 적용 (유지보수성 증가)
            2. 클래스 간의 계층 관계가 형성되어 "다형성"의 문법적인 토대가 됨.

            ## 상속의 단점 ##
            1. 부모 클래스의 기능을 추가/변경 시 자식 클래스가 정상적으로 동작하는지 예측이 힘듬
               >> 상속 구조가 복잡해질 수록 에측이 힘들어서 유지보수에 악영향을 끼칠 수 있음
            2. 자식 클래스에서 중요하게 사용되고 있는 기능일 경우, 부모 클래스에서의 변경이 쉽지 않음.
            3. 부모 클래스에서 의미 있었던 기능이 자식 클래스에서 무의미할 수 있음. (불필요한 기능 추가)


            >> 상속은 IS-A관계로 구분되는 경우에만 사용해야함. (cf has-a)
        */

    }
}
